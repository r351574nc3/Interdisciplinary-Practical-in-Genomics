######################################################################
# Copyright 2010 Leo Przybylski Licensed under the
# Educational Community License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may
# obtain a copy of the License at
#
# http://www.osedu.org/licenses/ECL-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS"
# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing
# permissions and limitations under the License.
######################################################################
package ClusterMatrix;

##
# Used to contain clusters that are intended to be sorted. Clusters
# are sorted according to the cardinality of edges per cluster. For 
# example, clusters with 12 edges will be grouped in an array together.
# The cardinality of that array determines the order in which these
# clusters appear. Since the matrix is sorted in ascending order,
# group 12 will appear after 10 and 11 due to its cluster cardinality.
# Such information is used later to be depicted in a visual graph.
#
# Right now, a multidimensional array is used to do this, but it might
# be easier to use an insertion sort and apply the Observer pattern.
# This would require more classes, and I'm not sure I care that much.
#
# Author: Leo Przybylski (przybyls@arizona.edu)
##
sub new {
    my $class = shift;
    my @clusters;

    return bless {_clusters => \@clusters}, $class;
}

sub clusters {
    my $this = shift;

    return $this->{_clusters};
}

sub sort {
}


return 1;
