######################################################################
# Copyright 2010 Leo Przybylski Licensed under the
# Educational Community License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may
# obtain a copy of the License at
#
# http://www.osedu.org/licenses/ECL-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS"
# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing
# permissions and limitations under the License.
######################################################################
package Edge;

##
# Edges can be grouped together to form clusters (graphs of genes). A
# cluster is basically like a digraph of genes where adjacent edges are
# grouped together. One Edge is known to be adjacent to another edge if 
# ...
#
# Author: Leo Przybylski (przybyls@arizona.edu)
##
sub new {
    my $class = shift;

    return bless {_record => shift}, $class;
}

sub equals {
    my $this = shift;
    my $tocompare = shift;
    
    if ($this->record()->query() eq $tocompare->record()->query()
        && $this->record()->subject() eq $tocompare->record()->subject()) {
        return 1;
    }
    return 0;
}

sub isAdjacentTo {
    my $this = shift;
    my $tocompare = shift;

    if ($this->record()->query() eq $tocompare->record()->query()
        || $this->record()->subject() eq $tocompare->record()->subject()) {
        return 1;
    }
    return 0;
}

sub record {
    my $this = shift;
    
    return $this->{_record};
}


return 1;
