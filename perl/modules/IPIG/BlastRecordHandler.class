######################################################################
# Copyright 2010 Leo Przybylski Licensed under the
# Educational Community License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may
# obtain a copy of the License at
#
# http://www.osedu.org/licenses/ECL-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS"
# BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing
# permissions and limitations under the License.
######################################################################

##
# Allows for different types of record handling of Blast output. Used
# as an adapter passed to the BlastParser for different handling of 
# blast information.
#
#
# Author: Leo Przybylski (przybyls@arizona.edu)
##
package BlastRecordHandler;

BEGIN {
    require "RecordHandler.class";
    import RecordHandler;
}

@ISA = (RecordHandler);

BEGIN {
    require "BlastRecord.class";
    import BlastRecord;
}

sub new {
    my $class = shift;

    return bless {}, $class;
}

sub handleRecord {
    my $this = shift;
    return new BlastRecord(@_);
}

##
# Validates this record using the self hit alignment information. If this record is valid,
# we can use that information to determine if it is an edge or not
#
# Parameters:
#     alignment - The alignment requirements from the self-hit
#     record    - The record to validate
##
sub validateRecord {
    my $this      = shift;
    my $alignment = shift;
    my $record    = shift;
}

return 1;
